apply plugin: 'com.android.application'
apply plugin: 'bugly'

bugly {
    appId = '1641d599d2' // 注册时分配的App ID
    appKey = '52ba93b6-333b-4f90-b80b-a44a9a38c6b0' // 注册时分配的App Key
}

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    //多渠道打包
    productFlavors {
        huawei {
            manifestPlaceholders.put("APP_CHANNEL_VALUE", 'developer.huawei.com')
        }
        other {
            manifestPlaceholders.put("APP_CHANNEL_VALUE", 'other')
        }
        baidu {
            manifestPlaceholders.put("APP_CHANNEL_VALUE", 'app.baidu.com')
        }
        oppo {
            manifestPlaceholders.put("APP_CHANNEL_VALUE", 'open.oppomobile.com')
        }
        vivo {
            manifestPlaceholders.put("APP_CHANNEL_VALUE", 'dev.vivo.com.cn')
        }
        xiaomi {
            manifestPlaceholders.put("APP_CHANNEL_VALUE", 'dev.xiaomi.com')
        }
        qiku360 {
            manifestPlaceholders.put("APP_CHANNEL_VALUE", 'dev.360.cn')
        }
        pp {
            manifestPlaceholders.put("APP_CHANNEL_VALUE", 'dev.pp.cn')
        }
        flyme {
            manifestPlaceholders.put("APP_CHANNEL_VALUE", 'open.flyme.cn')
        }
        qq {
            manifestPlaceholders.put("APP_CHANNEL_VALUE", 'open.qq.com')
        }
        jinli {
            manifestPlaceholders.put("APP_CHANNEL_VALUE", 'open.appgionee.com')
        }
        letv {
            manifestPlaceholders.put("APP_CHANNEL_VALUE", 'open.letv.com')
        }
        anzhi {
            manifestPlaceholders.put("APP_CHANNEL_VALUE", 'dev.anzhi.com')
        }
        lenovo {
            manifestPlaceholders.put("APP_CHANNEL_VALUE", 'open.lenovo.com')
        }
        google {
            manifestPlaceholders.put("APP_CHANNEL_VALUE", 'dev.google.com')
        }
        meizu {
            manifestPlaceholders.put("APP_CHANNEL_VALUE", 'dev.meizu.com')
        }
    }
    defaultConfig {
        applicationId "com.xuanfeng.xuanfengweather"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        flavorDimensions "versionCode"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        // 设置MultiDex可用
        multiDexEnabled true
    }
       buildTypes {
           release {
               // 关闭混淆
               minifyEnabled false
               proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
               //将release版本的包名重命名是否去除无效的资源文件，加上版本及日期
               applicationVariants.all { variant ->
                   variant.outputs.all { output ->
                       if (!variant.buildType.isDebuggable()) {
                           //获取签名的名字 variant.signingConfig.name
                           //要被替换的源字符串
                           def sourceFile = "-${variant.flavorName}-${variant.buildType.name}"
                           //替换的字符串
                           def replaceFile = "${variant.productFlavors[0].name}_${defaultConfig.applicationId}_${defaultConfig.versionName}_${defaultConfig.versionCode}_${releaseTime()}.apk"
                           outputFileName = output.outputFile.name.replace(sourceFile, replaceFile)
                           //遗留问题：如何获取当前module的name，如CodeBooke这个名字怎么获取到
                       }
                   }
               }
           }
       }

    // 保证其他的lib没有被preDex
    dexOptions {
        javaMaxHeapSize "4g"
        preDexLibraries = false
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/java-gen']
        }
    }

    dataBinding {
        enabled = true
    }

    signingConfigs {
        config {
            keyAlias 'xfw'
            keyPassword 'zjh5437901'
            storeFile file('../xfw.jks')
            storePassword 'zjh5437901'
        }
    }
}


dependencies {
    provided fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation files('libs/BaiduLBS_Android.jar')
    implementation project(':android-jungle-mediaplayer')

    implementation project(':daogenerator')
    implementation('com.airbnb.android:lottie:2.2.5', {
        exclude group: 'com.android.support', module: 'appcompat-v7'
    })
    implementation project(':mylibrary')
    // compile 'io.netty:netty-all:5.0.0.Alpha2'
    implementation files('libs/netty-all-4.1.4.Final.jar')
    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["support-v4"]
    implementation 'com.android.support:multidex:1.0.0'
    implementation 'com.tencent.bugly:crashreport:latest.release'
    implementation 'de.greenrobot:greendao-generator:2.1.0'
    implementation 'de.greenrobot:greendao:2.1.0'

    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'

    implementation 'com.github.xuanfengwuxiang:CustomTextView:2.2'

    //butterknife
    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
}
